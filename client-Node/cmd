#!/usr/local/bin/node

var argv = require('yargs').argv;
var client = require('ssh2').Client;

var __CONFIG = {
	// who is using this client ?
	user: 'lan',
	// your cmd.sh path on server
	cmdPath: '/usr/local/bin/cmd.sh',
	// your server's host that have installed cmd.sh
	host: 'localhost',
	// username
	username: 'root',
	// password
	password: 'password',
}

var ssh2 = new client();
ssh2.on('ready', function() {
	// 捕获退出信号，发送 CTRL + C 给服务器，以中断当前命令
	process.on('SIGINT', function() {
		ssh2.exec("\x003", function(err, stream) {
			if(err) throw err;
			stream.on('close', function(code, signal) {
				ssh2.end();
				console.log('SIGINT :: code %s signal %s', code, signal);
			}).on('data', function(data) {
				process.stdout.write(data.toString());
			}).stderr.on('data', function(data) {
				process.stdout.write(data.toString());
			});
		});
	});
	console.log('connect success!');
	var cmd = "";
	if(argv._ && argv._.length > 0) {
		cmd = argv._[0];
	}
	var shell = "sh " + __CONFIG.cmdPath + " -u " + __CONFIG.user;
	shell = shell + ' -c ' + cmd;
	ssh2.exec(shell, function(err, stream) {
		if(err) throw err;
		stream.on('close', function(code, signal) {
			console.log('connect close :: code %s signal :: %s', code, signal);
			ssh2.end();
		}).on('data', function(data) {
			process.stdout.write(data.toString());
		}).stderr.on('data', function(data) {
			process.stdout.write(data.toString());
		});
	});
}).connect({
	host: __CONFIG.host,
	username: __CONFIG.username,
	password: __CONFIG.password
});